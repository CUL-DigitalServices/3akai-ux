/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

 define(['jquery', 'oae.core'], function($, oae) {

    return function(uid) {

        // The widget container
        var $rootel = $('#' + uid);

        /**
         * Log out the current user when the log out button is clicked
         */
        var setUpLogout = function() {
            $rootel.on('click', '#oa-avocetheader-logout', function() {
                oae.api.authentication.logout(function() {
                    window.location = '/';
                });
            });
        };

        /**
         * Initialises signin/signout functionality in the header
         */
        var initAuthentication = function() {
            oae.api.util.template().render($('#oa-avocetheader-authentication-template', $rootel), {
                'enabledStrategies': oae.api.authentication.getEnabledStrategies(),
                'redirectUrl': getLoginRedirectURL()
            }, $('#oa-avocetheader-authentication-container', $rootel));
            setUpLogout();
        };

        /**
         * Get the URL to which the user should be redirected after signing in successfully. When a specific
         * login redirect target has been encoded in the URL, this target will always be used as the redirect.
         * When no explicit target is present, the current page will be reloaded unless the user is currently
         * on the landing page. In that case, the user will be redirected to his personal landing page.
         */
        var getLoginRedirectURL = function() {
            var currentLocation = window.location.pathname;
            // If a `url` parameter is available in the URL, use this as the redirect URL
            if ($.url().param('url')) {
                return $.url().param('url');
            // When on the landing page, use the me page as the redirect URL
            } else if (window.location.pathname === '' || window.location.pathname === '/') {
                return '/me';
            // On all other pages, redirect back to the current page
            } else {
                return currentLocation;
            }
        };

        initAuthentication();
    };
});
