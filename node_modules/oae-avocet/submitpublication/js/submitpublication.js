/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'jquery.fileupload', 'jquery.iframe-transport', 'jquery.typeahead'], function($, oae) {

    return function(uid) {
        var $rootel = $('#' + uid);

        var $upload = $('#oa-submitpublication-upload', $rootel);
        var $form = $('#oa-submitpublication-form', $rootel);
        var $progress = $('#oa-submitpublication-upload-progress-container', $rootel);
        var $success = $('#oa-submitpublication-success-container', $rootel);
        var $welcome = $('#oa-submitpublication-welcome-container', $rootel);
        var $uploadError = $('#oa-submitpublication-upload-error-container', $rootel);

        // This variable will hold the file which the user selects to upload
        var selectedFile;
        // The configured default for the visibility of files
        var visibility = oae.api.config.getValue('oae-content', 'visibility', 'files');

        /////////////////////////
        //   Welcome message   //
        /////////////////////////

        /**
         * Renders and shows the welcome message
         */
        var initWelcome = function() {
            oae.api.util.template().render($('#oa-submitpublication-welcome-name-template', $rootel), {}, $('#oa-submitpublication-welcome-name-container', $welcome));
            $welcome.show();
        };

        /**
         * Hides all panels excluding the elements provided to the function
         *
         * @param {...*} [panel] The panels to show.
         */
        var showPanels = function() {
            $form.hide();
            $progress.hide();
            $success.hide();
            $upload.hide();
            $welcome.hide();
            // Runs through the arguments array and calls jQuery.fn.show on each item
            _.invoke(arguments, $.fn.show);
            // Reset the page scroll position when panels are being switched.
            $(window).scrollTop(0);
        };

        /////////////////////////
        //     File upload     //
        /////////////////////////

        /**
         * Renders and shows an error in the upload form.
         *
         * @param  {String}    message    The error message to be displayed
         */
        var showFileUploadError = function(message) {
            var messages = {
                'default': 'There was an error uploading your file, please try again later.',
                'emptyFile': 'The selected file seems to be empty, please make sure you select the correct file.',
                'multipleFiles': 'Iâ€™m sorry, you can only upload one file at a time. Please try again'
            };
            // Render the error message, display the default message if none is provided
            oae.api.util.template().render($('#oa-submitpublication-upload-error-template', $rootel), {
                'errorMessage': messages[message] || messages.default
            }, $uploadError);
            $uploadError.show();
        };

        /**
         * Resets the upload form to be empty.
         */
        var resetFileUpload = function() {
            $('form', $upload)[0].reset();
        };

        var initFileupload = function() {
            $upload.fileupload({
                'add': function(event, data) {
                    $uploadError.hide();
                    var addedFile = data.files[0];

                    if (addedFile.size === 0) {
                        showFileUploadError('emptyFile');
                        resetFileUpload();
                    } else {
                        // Cache the selected file
                        selectedFile = data.files[0];
                        renderFileData();
                        // Show the form
                        showPanels($form);
                        $(document).trigger('oa.submitpublication.start');
                    }
                },
                'drop': function(event, data) {
                    // Show an error when the user attempts to upload multiple files.
                    if (data.files.length > 1) {
                        showFileUploadError('multipleFiles');
                        return false;
                    }
                },
                'dropZone': $upload,
                'fileInput': $('.oa-submitpublication-input-upload', $rootel),
                'forceIframeTransport': !$.support.xhrFileUpload && !$.support.xhrFormDataFileUpload,
                'replaceFileInput': false,
                'progress': function(data) {
                    // Update the upload progress bar
                    var percentage = data.loaded / data.total * 100;
                    $('.js-progress-bar', $rootel).width(percentage + '%');
                },
                'url': '/api/publications/create'
            });
        };

        /**
         * Updates all html containing information about the selected file
         */
        var renderFileData = function() {
            var data = {
                'fileName': selectedFile.name,
                'fileSize': $.fn.fileSize(selectedFile.size)
            };
            oae.api.util.template().render($('#oa-submitpublication-upload-selected-template', $rootel), data, $('#oa-submitpublication-upload-selected-container', $rootel));
            oae.api.util.template().render($('#oa-submitpublication-upload-progress-template', $rootel), data, $progress);
        };


        /////////////////////////
        //    Metadata form    //
        /////////////////////////

        /**
         * Initialises typeahead functionality on a given element, will fetch suggestions from the supplied endpoint with 'q' and 'limit' query parameters.
         *
         * @param  {jQuery}   $el   The element the typeahead functionality should be applied to
         * @param  {String}   name  The name which should be supplied to the typeahead plugin
         * @param  {String}   url   The endpoint to fetch results from
         */
        var initTypeahead = function($el, name, url) {
            $el.typeahead({
                'hint': true,
                'highlight': true
            }, {
                'name': name,
                'displayKey': 'displayName',
                'source': function(query, callback) {
                    $.ajax({
                        'url': url,
                        'data': {
                            'limit': 10,
                            'q': query
                        },
                        'success': function(data) {
                            callback(data.results);
                        }
                    });
                }
            });
        };

        var initForm = function() {

            // Activate the tooltips on the funder <abbr>s.
            // These are used to explain the funder abbreviations
            $('abbr[data-toggle="tooltip"]', $form).tooltip({placement: 'right'});

            // Prefill the email field
            $('#input-email', $form).val(oae.data.me.email);

            // Show/hide the other-funders field when the "Other" funder box is checked
            $form.on('change', 'input[name=funders][value=other]', function() {
                if ($(this).is(':checked')) {
                    $('#input-other-funders', $form).show();
                } else {
                    $('#input-other-funders', $form).hide();
                }
            });

            // Revalidate the funders form section when the other-funders
            // value changes. This is required because other-funders isn't
            // considered part of the funders field by default.
            $('#input-other-funders', $rootel).on('change', function() {
                $('input[name=funders]', $form).first().valid();
            });

            // Add a custom validator method to validate the funders component.
            // Requires other-funders to have a value when the Other funder is checked
            $.validator.addMethod('oa-validate-other-funders', function(value, element) {
                if ($('input[name=funders][value=other]', $form).is(':checked')) {
                    return $('#input-other-funders', $rootel).val().trim() !== '';
                }
                return true;
            }, 'Enter your funder\'s name');

            // Initialise typeahead functionality on the journal and department fields
            initTypeahead($('#input-journal', $form), 'journals', '/api/search/journals');
            initTypeahead($('#input-department', $form), 'departments', '/api/search/departments');

            // Initialise validation on the form
            oae.api.util.validation().validate($('form', $form), {
                'errorClass': 'help-block',
                'rules': {
                    'funders': {
                        'required': true,
                        'oa-validate-other-funders': true
                    }
                },
                'submitHandler': function(form) {
                    showPanels($progress);
                    var data = $(form).serializeObject();
                    var otherFunders = (data.funders === 'other' || _.contains(data.funders, 'other')) ? data['other-funders'] : null;
                    oae.api.publication.createPublication(data.title, data.author, data.journal, data.funders, otherFunders, data.email, data['use-cambridge-addendum'] === 'on', data.comment, $upload, selectedFile, function(error, data) {
                        // Reset the upload form
                        resetFileUpload();
                        if (error) {
                            showPanels($welcome, $upload);
                            // Show there was an error
                            showFileUploadError();
                            return;
                        }
                        // Reset the form
                        $('form', $form)[0].reset();
                        // Render and display the success message if there was no error
                        oae.api.util.template().render($('#oa-submitpublication-success-template', $rootel), {
                            'publication': data.publication
                        }, $success);
                        showPanels($welcome, $upload, $success);
                        $(document).trigger('oa.submitpublication.end');
                    });
                }
            });

            // Clear the comments textarea to avoid placeholder bug
            // @see https://github.com/CUL-DigitalServices/avocet-ui/issues/66
            $('#input-comments', $rootel).val('');
        };

        initFileupload();
        initForm();
        initWelcome();
    };
});
