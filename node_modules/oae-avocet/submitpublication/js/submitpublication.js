/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'jquery.fileupload', 'jquery.iframe-transport'], function($, oae) {

    // The key that the we store the most recently submitted ticket under in the sessionStorage.
    var TICKET_SESSION_KEY = 'oa.submitpublication.mostRecentTicketSubmission';

    return function(uid) {
        var $rootel = $('#' + uid);
        $rootel.attr('data-ga-label', 'Manuscript Upload');

        var $upload = $('#oa-submitpublication-upload', $rootel);
        var $fileInput = $('#input-upload', $rootel);
        var $form = $('#oa-submitpublication-form', $rootel);
        var $progress = $('#oa-submitpublication-upload-progress-container', $rootel);
        var $success = $('#oa-submitpublication-success-container', $rootel);
        var $welcome = $('#oa-submitpublication-welcome-container', $rootel);
        var $uploadError = $('#oa-submitpublication-upload-error-container', $rootel);

        // This variable will hold the file which the user selects to upload
        var selectedFile;
        // The configured default for the visibility of files
        var visibility = oae.api.config.getValue('oae-content', 'visibility', 'files');

        // The content item created by uploading a file
        var createdContent = null;

        /////////////////////////
        //   Welcome message   //
        /////////////////////////

        /**
         * Render and shows the welcome message
         */
        var initWelcome = function() {
            oae.api.util.template().render($('#oa-submitpublication-welcome-name-template', $rootel), {}, $('#oa-submitpublication-welcome-name-container', $welcome));
            $welcome.show();
        };

        /**
         * Hide all panels excluding the elements provided to the function
         *
         * @param {...*} [panel] The panels to show.
         */
        var showPanels = function() {
            $form.hide();
            $progress.hide();
            $success.hide();
            $upload.hide();
            $welcome.hide();
            // Run through the arguments array and calls jQuery.fn.show on each item
            _.invoke(arguments, $.fn.show);
            // Reset the page scroll position
            $(window).scrollTop(0);
        };

        /////////////////////////
        //     File upload     //
        /////////////////////////

        /**
         * Render and shows an error in the upload form.
         *
         * @param  {String}    message    The error message to be displayed
         */
        var showFileUploadError = function(message) {
            var messages = {
                'standard': 'There was an error uploading your file, please try again later.',
                'emptyFile': 'The selected file seems to be empty, please make sure you select the correct file.',
                'multipleFiles': 'Iâ€™m sorry, you can only upload one file at a time. Please try again'
            };
            // Render the error message, display the default message if none is provided
            var messageText = messages[message] || messages.standard;
            oae.api.util.template().render($('#oa-submitpublication-upload-error-template', $rootel), {
                'errorMessage': messageText
            }, $uploadError);
            $uploadError.show();

            if (message === 'standard' || message === undefined) {
                oae.api.analytics.gaSendEvent('Files', 'Failed to upload', oae.api.analytics.getElementIdentifier($fileInput));
            } else {
                oae.api.analytics.trackValidationError($fileInput, message);
            }
        };

        /**
         * Reset the upload form to be empty.
         */
        var resetFileUpload = function() {
            $('form', $upload)[0].reset();
        };

        /**
         * Initialise the fileupload functionlity of the widget
         */
        var initFileupload = function() {
            $upload.fileupload({
                'add': function(event, data) {
                    $uploadError.hide();
                    var addedFile = data.files[0];

                    if (addedFile.size === 0) {
                        showFileUploadError('emptyFile');
                        resetFileUpload();
                    } else {
                        // Cache the selected file
                        selectedFile = data.files[0];

                        renderProgressData();
                        uploadFile();

                        // Send a tracking event when a file upload starts, recording whether it was a drag-drop or a regular browse for the file.
                        oae.api.analytics.gaSend('event', 'Files', data._isDrop ? 'Dragged & dropped' : 'Browsed for', oae.api.analytics.getElementIdentifier($fileInput));
                    }
                },
                'drop': function(event, data) {
                    // Show an error when the user attempts to upload multiple files.
                    if (data.files.length > 1) {
                        showFileUploadError('multipleFiles');
                        return false;
                    }

                    // Can't find a better way of differentiating between a drop and a normal upload in add()...
                    data._isDrop = true;
                },
                'dropZone': $upload,
                'fileInput': $('.oa-submitpublication-input-upload', $rootel),
                'forceIframeTransport': !$.support.xhrFileUpload && !$.support.xhrFormDataFileUpload,
                'replaceFileInput': false,
                'progress': function(data) {
                    var percentage = data.loaded / data.total * 100;
                    var totalSize = $.fn.fileSize(data.total);
                    var doneSize = $.fn.fileSize(data.loaded);
                    // Update the upload progress bar
                    var $progressBar = $('.oa-progress-bar', $rootel).width(percentage + '%').attr('aria-valuenow', percentage);
                    $('span', $progressBar).text(percentage + '% Complete');
                    // Update the progress text (e.g. '1.2 MB of 5 MB')
                    $('.oa-progress-size', $rootel).text(doneSize + ' of ' + totalSize);
                },
                'url': '/api/content/create'
            });

            $upload.on('dragover', function() {
                $('#oa-submitpublication-upload-wrap', $upload).addClass('oa-dragover');
            });

            $upload.on('dragleave', function() {
                $('#oa-submitpublication-upload-wrap', $upload).removeClass('oa-dragover');
            });
        };

        /**
         * Insert and initialise the publicationfile widget
         */
        var initPublicationFile = function() {
            oae.api.widget.insertWidget('publicationfile', null, $('#oa-submitpublication-publicationfile-widget-container', $rootel).empty(), null, {
                'content': createdContent,
                'showActions': false
            });
        };

        /**
         * Insert and initialise the publicationform widget
         */
        var initForm = function() {
            // Track the google analytics events status
            var eventSent = $.Deferred();
            var pageviewSent = $.Deferred();
            // Fetch and insert the publicationform widget
            oae.api.widget.insertWidget('publicationform', null, $('#oa-submitpublication-form-widget-container', $rootel));
            $(document).on('oa.publicationform.submit', function(event, publication) {

                oae.api.tickets.createTicket(publication, createdContent.id, function(error, data) {
                    // Reset the upload form
                    resetFileUpload();
                    if (error) {
                        showPanels($welcome, $upload);
                        // Show there was an error
                        showFileUploadError();
                        return;
                    }

                    // Save the ticket in session storage so that the confirmation widget can show a confirmation for the ticket
                    sessionStorage.setItem(TICKET_SESSION_KEY, JSON.stringify(data));

                    // Disable the submit button so that the user can't hammer it in frustration while waiting for the next page to load
                    $('button[type=submit]', $rootel).attr('disabled', 'disabled');

                    // Redirect to the home page
                    var onEventSent = oae.api.analytics.whenCalledOrAfter(5000, $.proxy(eventSent.resolve, eventSent));
                    var onPageviewSent = oae.api.analytics.whenCalledOrAfter(5000, $.proxy(pageviewSent.resolve, pageviewSent));

                    // Send an event to Google Analytics each time a publication has been successfully created
                    oae.api.analytics.gaSendEvent('Manuscripts', 'Submitted', { 'hitCallback': onEventSent });
                    oae.api.analytics.trackVirtualPageview('/upload/confirmation', { 'hitCallback': onPageviewSent });

                    $.when(eventSent, pageviewSent).done(oae.api.util.redirect().home);
                });
            });

            $(window).on('beforeunload', function() {
                // Check whether the form or upload progress is visible and whether the manuscript hasn't been submitted yet
                if (($form.is(':visible') || $progress.is(':visible')) && eventSent.state() === 'pending' && pageviewSent.state() === 'pending') {
                    // Show a warning saying the manuscript hasn't been submitted yet
                    return oae.api.i18n.translate('__MSG__YOUR_MANUSCRIPT_HASNT_BEEN_SUBMITTED_YET__', 'submitpublication');
                }
            });
        };

        /**
         * Render the progress bar template with the selected file information
         */
        var renderProgressData = function() {
            oae.api.util.template().render($('#oa-submitpublication-upload-progress-template', $rootel), {
                'fileName': selectedFile.name
            }, $progress);
        };

        /**
         * Upload the user's selected file, showing the main form when complete.
         */
        var uploadFile = function() {
            if (!selectedFile) {
                throw new Error('No file selected');
            }

            // Show the progress panel
            showPanels($progress);

            // Hide the upload progress indicators if the file is uploaded through iFrame transport
            $('.oa-submitpublication-upload-progress-wrap, .oa-progress-size').toggle($.support.xhrFileUpload && $.support.xhrFormDataFileUpload);

            // Record the start time of the upload in order to obtain the upload duration later.
            var startTime = Date.now();

            oae.api.content.createFile(selectedFile.name, null, 'public', $upload, selectedFile, null, null, function(error, content) {
                if (error) {
                    showPanels($welcome, $upload);
                    // Show there was an error
                    showFileUploadError();
                    return;
                }

                oae.api.analytics.gaSend('timing', 'Files', 'Upload duration', Date.now() - startTime);

                createdContent = content;
                initPublicationFile();
                // Show the form
                showPanels($form);
                oae.api.analytics.trackVirtualPageview('/upload/provide-details');
            });
        };

        initFileupload();
        initForm();
        initWelcome();

        // Flip an up/down arrow icon when a Bootstrap collapsable area expands/collapses
        $('#oa-submitpublication-welcome-help', $rootel).on('show.bs.collapse hide.bs.collapse', function() {
            $('.oa-submitpublication-btn-help i', $rootel).toggleClass('icon-chevron-down icon-chevron-up');
        });
    };
});
