/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'jquery.fileupload', 'jquery.iframe-transport', 'jquery.validate'], function($, oae) {

    return function(uid) {
        var $rootEl = $('#' + uid);
        var $upload = $('#oa-submitpublication-upload', $rootEl);
        var $form = $('#oa-submitpublication-form', $rootEl);
        var $progress = $('#oa-submitpublication-upload-progress-container', $rootEl);

        var selectedFile;
        var visibility = oae.api.config.getValue('oae-content', 'visibility', 'files');
        // Object to store all main parts of the submission process of which only one can be shown at a time
        var parts = {
            'form': $form,
            'progress': $progress,
            'upload': $upload
        };

        /**
         * Converts bytes to size (e.g. 2MB)
         * @param  {Number}   bytes     The bytes to calculate the size of
         */
        var bytesToSize = function(bytes) {
            var k = 1000;
            var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
            if (bytes === 0) return '0 Bytes';
            var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)),10);
            return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];
        };

        /**
         * Shows the HTML responsible for a provided part of the submission process, hides all others.
         * @param  {String}   toActivate     The which should be activated
         */
        var activatePart = function(toActivate) {
            var $toShow = parts[toActivate];
            console.log(parts[toActivate]);
            if ($toShow) $toShow.removeClass('hide');
            _.each(_.omit(parts, toActivate), function ($toHide) {
                $toHide.addClass('hide');
            });
        };

        /**
         * Sets selectedFile to a given file, updates the html to show the title/size of the new file
         * @param  {Object}   file     The file to be uploaded
         */
        var setSelectedFile = function(file) {
            var data = {
                'fileName': file.name,
                'fileSize': bytesToSize(file.size)
            };
            selectedFile = file;
            oae.api.util.template().render($('#oa-submitpublication-upload-selected-template'), data, $('#oa-submitpublication-upload-selected-container'));
            oae.api.util.template().render($('#oa-submitpublication-upload-progress-template'), data, $progress);
        };

        var onFileDrop = function(event, data) {
            // Overwrite the files array so we only use the first file if multiple files are dropped
            if (data.files.length > 1) {
                data.files = [data.files[0]];
            }
        };

        var onFileAdd = function(event, data) {
            setSelectedFile(data.files[0]);
            activatePart('form');
        };

        var onFormSubmit = function() {
            activatePart('progress');
            oae.api.content.createFile(selectedFile.name, '', visibility, $upload, selectedFile, [], [], onUploadComplete);
        };

        var onUploadProgress = function(data) {
            var percentage = data.loaded / data.total * 100;
            $('.js-progress-bar', $rootEl).width(percentage + '%');
        };

        var onUploadComplete = function(error, data) {
            if (error) {
                activatePart('upload');
                $('#oa-submitpublication-upload-error', $upload).removeClass('hide');
                return;
            }
            // TODO redirect to success page
        };

        var onFieldHighlight = function(field) {
            $(field).parents('.form-group').addClass('has-error');
        };

        var onFieldUnhighlight = function(field) {
            $(field).parents('.form-group').removeClass('has-error');
        };

        var onFieldError = function(error, field) {
            $(error).appendTo($(field).parents('.form-group').find('> div'));
        };

        var initForm = function() {
            // Initialise a new multiadd component for the funders field
            var fundersComponent = new MultiAdd($('.js-funders', $form), {
                'placeholder': 'Add funders',
                'title': 'Funders',
                'name': 'funder'
            });
            // Prefill the email field
            $('#input-email', $form).val(oae.data.me.displayName + '@cam.ac.uk');
            // Add a custom validator method to validate the funders component
            $.validator.addMethod('oa-validate-funders', function() {
                return fundersComponent.getItems().length;
            }, 'At least one funder is required.');
            $('form', $form).validate({
                'errorClass': 'help-block',
                'errorPlacement': onFieldError,
                'highlight': onFieldHighlight,
                'rules': {
                    'funder': {
                        'oa-validate-funders': true
                    }
                },
                'submitHandler': onFormSubmit,
                'unhighlight': onFieldUnhighlight
            });
        };

        var initFileupload = function() {
            $upload.fileupload({
                'add': onFileAdd,
                'drop': onFileDrop,
                'dropZone': $upload,
                'fileInput': $('.js-input-upload', $rootEl),
                'forceIframeTransport': !$.support.xhrFileUpload && !$.support.xhrFormDataFileUpload,
                'replaceFileInput': false,
                'progress': onUploadProgress,
                'url': '/api/content/create'
            });
        };

        // MultiAdd component
        var MultiAdd = function(element, options) {
            _.bindAll(this);
            this.$el = $(element);
            this.$template = $('#oa-submitpublication-multi-add-template');
            this.data = _.extend({}, MultiAdd.DEFAULTS, options);
            this.data.instanceNumber = (MultiAdd.instanceNumber = MultiAdd.instanceNumber + 1 || 0);
            this.render();
            this.bindEvents();
        };

        MultiAdd.DEFAULTS = {
            'error': false,
            'items': [],
            'name': '',
            'placeholder': '',
            'title': ''
        };

        _.extend(MultiAdd.prototype, {
            'addItem': function(name) {
                this.data.items.push(name);
            },
            'bindEvents': function() {
                this.$el.on('click', '.js-btn-add', this.onAddClick);
                this.$el.on('click', '.js-btn-remove', this.onRemoveClick);
            },
            'getItems': function() {
                return this.data.items;
            },
            'onAddClick': function(event) {
                event.preventDefault();
                var value = this.$el.find('[type="text"]').val();
                if (value) {
                    this.addItem(value);
                    this.render();
                }
            },
            'onRemoveClick': function(event) {
                event.preventDefault();
                var index = $(event.currentTarget).data('index');
                this.removeItem(index);
                this.render();
            },
            'removeItem': function(index) {
                this.data.items.splice(index, 1);
            },
            'render': function() {
                oae.api.util.template().render(this.$template, this.data, this.$el);
            }
        });

        initFileupload();
        initForm();
    };
});
