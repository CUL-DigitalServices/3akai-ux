/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'jquery.fileupload', 'jquery.iframe-transport'], function($, oae) {

    return function(uid) {
        var $rootel = $('#' + uid);

        var $upload = $('#oa-submitpublication-upload', $rootel);
        var $form = $('#oa-submitpublication-form', $rootel);
        var $progress = $('#oa-submitpublication-upload-progress-container', $rootel);
        var $success = $('#oa-submitpublication-success-container', $rootel);
        var $uploadError = $('#oa-submitpublication-upload-error-container', $rootel);

        // This variable will hold the file which the user selects to upload
        var selectedFile;
        // The configured default for the visibility of files
        var visibility = oae.api.config.getValue('oae-content', 'visibility', 'files');

        /////////////////////////
        //     File upload     //
        /////////////////////////

        /**
         * Renders and shows an error in the upload form.
         *
         * @param  {String}    message    The error message to be displayed
         */
        var showFileUploadError = function(message) {
            var messages = {
                'default': 'There was an error uploading your file, please try again later.',
                'emptyFile': 'The selected file seems to be empty, please make sure you selected the correct file.',
                'multipleFiles': 'You can only upload one file at a time.'
            };
            // Render the error message, display the default message if none is provided
            oae.api.util.template().render($('#oa-submitpublication-upload-error-template', $rootel), {
                'errorMessage': messages[message] || messages.default
            }, $uploadError);
            $uploadError.show();
        };

        /**
         * Resets the upload form to be empty.
         */
        var resetFileUpload = function() {
            $('form', $upload)[0].reset();
        };

        var initFileupload = function() {
            $upload.fileupload({
                'add': function(event, data) {
                    $uploadError.hide();
                    var addedFile = data.files[0];

                    if (addedFile.size === 0) {
                        showFileUploadError('emptyFile');
                        resetFileUpload();
                    } else {
                        // Cache the selected file
                        selectedFile = data.files[0];
                        renderFileData();
                        // Show the form
                        $upload.hide();
                        $success.hide();
                        $form.show();
                        $(document).trigger('oa.submitpublication.start');
                    }
                },
                'drop': function(event, data) {
                    // Show an error when the user attempts to upload multiple files.
                    if (data.files.length > 1) {
                        showFileUploadError('multipleFiles');
                        return false;
                    }
                },
                'dropZone': $upload,
                'fileInput': $('.js-input-upload', $rootel),
                'forceIframeTransport': !$.support.xhrFileUpload && !$.support.xhrFormDataFileUpload,
                'replaceFileInput': false,
                'progress': function(data) {
                    // Update the upload progress bar
                    var percentage = data.loaded / data.total * 100;
                    $('.js-progress-bar', $rootel).width(percentage + '%');
                },
                'url': '/api/publications/create'
            });
        };

        /**
         * Updates all html containing information about the selected file
         */
        var renderFileData = function() {
            var data = {
                'fileName': selectedFile.name,
                'fileSize': $.fn.fileSize(selectedFile.size)
            };
            oae.api.util.template().render($('#oa-submitpublication-upload-selected-template', $rootel), data, $('#oa-submitpublication-upload-selected-container', $rootel));
            oae.api.util.template().render($('#oa-submitpublication-upload-progress-template', $rootel), data, $progress);
        };


        /////////////////////////
        //    Metadata form    //
        /////////////////////////

        var initForm = function() {

            // Activate the tooltips on the funder <abbr>s.
            // These are used to explain the funder abbreviations
            $form.find("abbr[data-toggle=tooltip]").tooltip({placement: "right"});

            // Prefill the email field
            $('#input-email', $form).val(oae.data.me.email);

            // Show/hide the other-funders field when the "Other" funder box is checked
            $form.find("input[name=funders][value=other]").on("change", function() {
                if ($(this).is(":checked")) {
                    $form.find("#input-other-funders").show();
                }
                else {
                    $form.find("#input-other-funders").hide();
                }
            });

            // Revalidate the funders form section when the other-funders
            // value changes. This is required because other-funders isn't
            // considered part of the funders field by default.
            $("#input-other-funders").on("change", function() {
                $form.find("input[name=funders]").first().valid();
            });

            // Add a custom validator method to validate the funders component.
            // Requires other-funders to have a value when the Other funder is checked
            $.validator.addMethod('oa-validate-other-funders', function(value, element) {
                if ($form.find("input[name=funders][value=other]").is(":checked")) {
                    return $("#input-other-funders").val().trim() !== "";
                }
                return true;
            }, "Enter your funder's name");

            // Initialise validation on the form
            oae.api.util.validation().validate($('form', $form), {
                'errorClass': 'help-block',
                'rules': {
                    'funders': {
                        'required': true,
                        'oa-validate-other-funders': true
                    }
                },
                'submitHandler': function(form) {
                    $form.hide();
                    $progress.show();
                    var data = $(form).serializeObject();
                    var otherFunders = (data.funders === "other" || _.contains(data.funders, 'other')) ? data['other-funders'] : null;
                    oae.api.publication.createPublication(data.title, data.author, data.journal, data.funders, otherFunders, data.email, data.copyright, data.comment, $upload, selectedFile, function(error, data) {
                        if (error) {
                            // Go back to the file selection
                            $progress.hide();
                            $upload.show();
                            // Show there was an error
                            showFileUploadError();
                            // Reset the upload form
                            resetFileUpload();
                            return;
                        }
                        // Reset the form
                        $('form', $form)[0].reset();
                        // Render and display the success message if there was no error
                        oae.api.util.template().render($('#oa-submitpublication-success-template', $rootel), {
                            'publicationTitle': data.publication.displayName
                        }, $success);
                        $progress.hide();
                        $upload.show();
                        $success.show();
                        $(document).trigger('oa.submitpublication.end');
                    });
                }
            });
        };

        initFileupload();
        initForm();

    };
});
