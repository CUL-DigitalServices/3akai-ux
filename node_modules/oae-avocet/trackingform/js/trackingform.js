/*!
 * Copyright 2014 Digital Services, University of Cambridge Licensed
 * under the Educational Community License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the
 * License. You may obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'bootstrap.datepicker', '/shared/vendor/js/l10n/cultures/globalize.culture.en-GB.js'], function($, oae) {

    return function(uid, showSettings, widgetData) {
        var $rootel = $('#' + uid);

        /**
         * Initialise the jQuery.validate plugin on the form element
         */
        var initFormValidation = function() {
            var $form = $('form', $rootel);
            oae.api.util.validation().validate($form, {
                'errorClass': 'help-block',
                'submitHandler': function() {
                    var trackingData = formDataToTrackingData($form.serializeObject());
                    // Dispatch an event if the form is submitted
                    $(document).trigger('oa.trackingform.submit', trackingData);
                }
            });
        };

        /**
         * Pivots data entered in the form to ticket
         */
        var formDataToTrackingData = function(formData) {
            var underEmbargo = formData.underEmbargo === 'on';
            return {
                'underEmbargo': underEmbargo,
                'embargoDate': underEmbargo ? (function() {
                    // Convert the acceptance date to a Date object
                    var dateObj = Globalize.parseDate(formData['embargoDate'], 'dd/MM/yyyy');
                    // 'acceptanceDate' is currently in local time. We need to send the UTC equivalent of the local date @ midnight (as a millisecond timestamp).
                    return dateObj ? Date.UTC(dateObj.getFullYear(), dateObj.getMonth(), dateObj.getDate()) : null;
                }()) : null
            };
        };

        var trackingDataToFormData = function(trackingData) {
            return {
                'underEmbargo': trackingData.underEmbargo,
                'embargoDate': !trackingData.embargoDate ? '' : (function() {
                    // embargoDate is a millisecond timestamp representing the date in UTC. We need obtain the local time equivalent of this time in order to have Globalize.format() format it (as you can't tell Globalize to format the UTC representation)
                    var dateUTC = new Date(trackingData.embargoDate);
                    var dateLocal = new Date(dateUTC.getUTCFullYear(), dateUTC.getUTCMonth(), dateUTC.getUTCDate());
                    return Globalize.format(dateLocal, 'd', 'en-GB');
                }())
            };
        };

        /**
         * Bind the necessary event listeners
         */
        var addBinding = function() {
            $rootel.on('change', '[name="underEmbargo"]', function() {
                $('.oa-input-embargo-date').toggle($(this).prop('checked'));
            });
        };

        /**
         * Render the tracking form
         */
        var renderTrackingForm = function(data) {
            oae.api.util.template().render($('#oa-trackingform-template', $rootel), data, $('#oa-trackingform-container', $rootel));
        };

        /**
         * Execute the form initialization tasks
         */
        var initForm = function() {
            renderTrackingForm({
                'prefill': trackingDataToFormData(widgetData.publication)
            });

            $('.input-group.date', $rootel).datepicker({
                'format': 'dd/mm/yyyy',
                'keyboardNavigation': false
            });

            initFormValidation();
        };

        initForm();
        addBinding();
    };

});
