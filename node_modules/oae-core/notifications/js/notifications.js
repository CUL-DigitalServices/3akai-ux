/*
 * Licensed to the Sakai Foundation (SF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The SF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

define(['jquery', 'underscore', 'oae.core'], function($, _, oae) {

    return function(uid) {

        // The widget container
        var $rootel = $('#' + uid);

        // Variable that will be used to keep track of the current infinite scroll instance
        var infinityScroll = false;

        /**
         * Initialize a new infinite scroll container that fetches the current user's notifications.
         */
        var getLibrary = function() {
            // Disable the previous infinite scroll
            if (infinityScroll) {
                infinityScroll.kill();
            }

            // Set up the infinite scroll for the list of search results
            infinityScroll = $('.oae-list', $rootel).infiniteScroll('/api/notifications', {
                'limit': 10
            }, '#notifications-template', {
                'scrollContainer': $('#notifications-container', $rootel),
                'postProcessor': function(data) {
                    return {
                        'results': data.items
                    };
                }
                // TODO: emptyListProcessor
            });
        };

        /**
         * TODO
         */
        var setUpNotificationsClickover = function() {
            $(document).on('click', '.oae-trigger-notifications', function() {
                // Trigger the notifications clickover
                oae.api.util.clickover($(this), $('.notifications-widget'), {
                    'onShown': function($currentRootEl) {
                        $rootel = $currentRootEl;
                        getLibrary();
                    }
                });
            });
        };

        setUpNotificationsClickover();

    };
});
