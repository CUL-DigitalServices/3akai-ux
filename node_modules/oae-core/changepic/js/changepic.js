/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'jquery.Jcrop', 'jquery.fileupload', 'jquery.iframe-transport'], function($, oae) {

    return function(uid, showSettings) {


        /////////////////////////////
        // CONFIGURATION VARIABLES //
        /////////////////////////////

        // The widget container
        var $rootel = $('#' + uid);

        var ctxData = false;

        // The cropping data used to send to the cropping service
        var cropData = {
            x: 0,
            y: 0,
            width: 0,
            principalId: null
        };

        // IE9 and below don't support XHR file uploads and we fall back to iframe transport
        var useIframeTransport = !$.support.xhrFileUpload && !$.support.xhrFormDataFileUpload;


        ///////////////////////
        // UTILITY FUNCTIONS //
        ///////////////////////

        /**
         * Resets the state of the widget when the modal dialog has been closed
         */
        var reset = function() {
            // Remove the jCrop container
            $('#changepic-form #changepic-jcrop-container', $rootel).empty();

            // Disable the `set picture` button
            $('#changepic-set', $rootel).attr('disabled', 'disabled');

            // Hide all views
            $('#changepic-dropzone > div', $rootel).hide();
            $('#changepic-cropping-container', $rootel).hide();

            // Reset the progress indication
            $('.bar', $rootel).css('width', '0%');
            $('#changepic-uploading-container .progress', $rootel).hide();
            $('#changepic-uploading-container .icon-spinner', $rootel).hide();

            // Hide the footer
            $('.modal-footer', $rootel).hide();
        };

        /**
         * When pictures are scaled down to fit in the modal recalculation of
         * the coordinates needs to happen.
         *
         * @param  {Object}   crd    Cropping coordinates received from the jCrop plugin
         */
        var calculateCoordinates = function(crd) {
            var naturalWidth = $('#changepic-jcrop', $rootel)[0].naturalWidth;
            var naturalHeight = $('#changepic-jcrop', $rootel)[0].naturalHeight;
            var displayWidth = $('#changepic-jcrop', $rootel).width();
            var displayHeight = $('#changepic-jcrop', $rootel).height();

            widthScale = naturalWidth / displayWidth;
            heightScale = naturalHeight / displayHeight;

            cropData.x = Math.floor(crd.x * widthScale);
            cropData.y = Math.floor(crd.y * heightScale);
            cropData.width = Math.floor(crd.w * widthScale);
        };

        /**
         * Calculates and returns the initial coordinates of the crop selection based on the size of
         * the freshly uploaded picture.
         *
         * @return {String[]}    Returns an array of cropping coordinates ([x1, y1, x2, y2]).
         */
        var getDefaultCropSelection = function() {
            // Get the width and height of the image in the DOM.
            var displayWidth = $('#changepic-jcrop', $rootel).width();
            var displayHeight = $('#changepic-jcrop', $rootel).height();

            // Initialize the crop coordinates
            var x1 = 0;
            var y1 = 0;
            var x2 = 0;
            var y2 = 0;

            // If the image is in landscape or square we calculate the horizontal offset based off of
            // the width and leave 20 pixels at the top and bottom edges. The maximum width of the selection
            // is equal to the maximum height (square profile pictures).
            if (displayWidth >= displayHeight) {
                var maxWidth = displayHeight - 20;
                x1 = (displayWidth - maxWidth) / 2 + 10;
                x2 = x1 + maxWidth - 20;
                y1 = 20;
                y2 = maxWidth;
            // If the image is in portrait we calculate the vertical offset based off of the height
            // and leave 20 pixels at the left and right edges. The maximum height of the selection is equal
            // to the maximum width (square profile pictures);
            } else {
                var maxWidth = displayWidth - 20;
                x1 = 20;
                x2 = maxWidth;
                y1 = (displayHeight - maxWidth) / 2 + 10;
                y2 = y1 + maxWidth - 20;
            }

            return [x1, y1, x2, y2];
        };

        /**
         * Shows the previously selected profile picture in a dropzone
         */
        var showSelectedPicture = function() {
            // Hide all content in the drop zone
            $('#changepic-dropzone > div', $rootel).hide();

            // Only show the picture the user previously chose in the drop zone
            $('.changepic-dropzone-content.haspicture', $rootel).show();
            $('.changepic-dropzone-content.haspicture', $rootel).html('<img src="' + ctxData.picture.medium + '"/>');

            // Show the browse button
            $('.changepic-browse', $rootel).show();
        };

        /**
         * Shows the freshly uploaded picture and applies jCrop to it to enable the user to crop a profile picture.
         *
         * @param  {Object}    data    The personal user data as returned in the `me` feed
         */
        var showCroppingArea = function(data) {
            // Hide the upload progress
            $('#changepic-uploading-container', $rootel).hide();

            // Show the jCrop area
            $('#changepic-form #changepic-jcrop-container', $rootel).show();

            // Render the freshly uploaded picture
            $('#changepic-form #changepic-jcrop-container', $rootel).html('<img src="' + data.picture.large + '" id="changepic-jcrop"/>')

            // Enable the `set picture` button
            $('#changepic-set', $rootel).removeAttr('disabled');

            // Show the footer
            $('.modal-footer', $rootel).show();

            // Initialize jCrop to allow for user selection
            var t = setTimeout(setUpJCrop, 200);
        };

        /**
         * Shows a progress indicator while the selected image is uploading.
         * If the browser does not support progress indication a regular spinner is shown.
         */
        var showUploadingPicture = function() {
            // Hide the drop zone
            $('#changepic-dropzone', $rootel).hide();

            // Hide the browse button
            $('.changepic-browse', $rootel).hide();

            // Show the upload progress
            $('#changepic-uploading-container', $rootel).show();

            // If we need an iframe for the upload, progress will probably not be supported.
            if (useIframeTransport) {
                // Show the upload spinner instead of the progress bar
                $('#changepic-uploading-container .icon-spinner', $rootel).show();
            } else {
                // Show the upload progress bar
                $('#changepic-uploading-container .progress', $rootel).show();
            }
        };

        /**
         * Sends the cropping coordinates that the user created to the backend and
         * receives the `me` data in response. Sends out an `oae.changepic.finished` event and
         * closes the modal when done. While the data is sent to the server a spinning
         * animation is indicating that cropping is in progress.
         */
        var setPicture = function() {
            // Hide the cropping area
            $('#changepic-form #changepic-jcrop-container', $rootel).hide();

            // Hide the footer buttons
            $('.modal-footer', $rootel).hide();

            // Show that the image is being cropped
            $('#changepic-cropping-container', $rootel).show();

            // Make sure the correct principalID is passed
            cropData.principalId = ctxData.id;

            // Send the request to crop the image
            $.ajax({
                'url': '/api/crop',
                'type': 'POST',
                'data': cropData,
                'success': function(data) {
                    $(document).trigger('oae.changepic.finished');
                    $('#changepic-modal', $rootel).modal('hide');
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__PROFILE_PICTURE_UPDATED__', 'changepic'),
                        oae.api.i18n.translate('__MSG__PROFILE_PICTURE_SUCCESSFULLY_UPDATED__', 'changepic')
                    );
                }
            });
        };

        /**
         * Updates the progress indicator
         *
         * @param  {Number}   progress   Number between 0 and 100 indicating the upload progress
         */
        var updateProgress = function(progress) {
            $('.bar', $rootel).css('width', progress + '%');
        };


        ////////////////////
        // INITIALIZATION //
        ////////////////////

        /**
         * Initializes the jCrop plugin on the full-size images that come back from the server
         * when a user uploaded a picture.
         */
        var setUpJCrop = function() {
            $('#changepic-jcrop', $rootel).Jcrop({
                'aspectRatio': 1,
                'bgOpacity': 0.4,
                'bgColor': '#FFF',
                'minSize': [162, 162],
                'setSelect': getDefaultCropSelection(),
                'onSelect': calculateCoordinates
            });
        };

        /**
         * Initializes jQuery fileupload to allow the users to upload an image by
         * browsing for it or dropping it on the drop zone.
         */
        var setUpUploadPicture = function() {
            var fileuploadOptions = {
                'url': '/api/' + ctxData.resourceType + '/' + ctxData.id + '/picture',
                'dropZone': $('#changepic-dropzone', $rootel),
                'forceIframeTransport': useIframeTransport,
                'progress': function(ev, data) {
                    // If we need an iframe for the upload, progress will probably not be supported.
                    if (!useIframeTransport) {
                        // Update the progress bar
                        updateProgress((data.loaded / data.total) * 100);
                    }
                },
                'drop': function() {
                    showUploadingPicture();
                },
                'change': function() {
                    showUploadingPicture();
                },
                'done': function(ev, data) {
                    if (useIframeTransport) {
                        showCroppingArea($.parseJSON($(data.result[0]).text()));
                    } else {
                        showCroppingArea($.parseJSON(data.result));
                    }
                }
            };

            $('#changepic-form', $rootel).fileupload(fileuploadOptions);
        };

        /**
         * Sets up the initial view when the widget is opened.
         */
        var setUpView = function() {
            // Hide the drop zone
            $('#changepic-dropzone', $rootel).show();
            // If a picture has already been set the drop zone needs an extra initialization step
            // to show the picture.
            if (ctxData.picture && ctxData.picture.medium) {
                showSelectedPicture();
            }
        };

        /**
         * Adds binding to various elements in the widget
         */
        var addBinding = function() {
            $('#changepic-set', $rootel).on('click', setPicture);
            $('#changepic-modal').on('hidden', reset);
            $('#changepic-modal').on('shown', setUpView);

            // Hide the spinning icon with jQuery (https://github.com/FortAwesome/Font-Awesome/issues/729)
            $('#changepic-uploading-container .icon-spinner', $rootel).hide();
        };

        /**
         * Initializes the change picture modal dialog
         */
        var setUpChangePicModal = function() {
            $(document).on('click', '.oae-trigger-changepic', function() {
                // Show the changepic modal
                $('#changepic-modal', $rootel).modal();

                // Request the context information
                $(document).trigger('oae.context.get');
            });

            // Receive the content profile information and set up the fileupload plugin
            $(document).on('oae.context.send', function(ev, ctx) {
                ctxData = ctx;
                if (ctxData.resourceType === 'group') {
                    $('.changepic-dropzone-content i', $rootel).toggleClass('hide');
                }
                setUpUploadPicture();
            });
        };

        addBinding();
        setUpChangePicModal();
    };
});
