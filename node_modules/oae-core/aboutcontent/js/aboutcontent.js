/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core'], function($, oae) {

    return function(uid, showSettings, widgetData) {

        // The widget container
        var $rootel = $('#' + uid);

        // Cache the content profile
        var contentProfile = null;

        // Variable that will be used to keep track of the current infinite scroll instance
        var infinityScroll = null;

        /**
         * Render the content details
         */
        var renderAboutContentDetails = function() {
            oae.api.util.template().render($('#aboutcontent-details-template', $rootel), {
                'contentProfile': contentProfile
            }, $('#aboutcontent-details-container', $rootel));
        };

        /**
         * Initialize a new infinite scroll container that fetches the members.
         */
        var getMembers = function() {
            // Disable the previous infinite scroll
            if (infinityScroll) {
                infinityScroll.kill();
            }

            var url = '/api/content/'+ contentProfile.id + '/members';

            // Set up the infinite scroll instance
            infinityScroll = $('.oae-list', $rootel).infiniteScroll(url, {
                'limit': 8
            }, '#aboutcontent-sharedwith-template', {
                'scrollContainer': $('#aboutcontent-shared-container', $rootel),
                'postProcessor': function(data) {
                    // Extract the `profile` object off each member and add the `role` to it
                    // because the `listItem` macro needs a list of basic profiles and the
                    // list item actions macro needs the `role` of each member
                    $.each(data.results, function(i, member) {
                        data.results[i] = _.extend(data.results[i].profile, data.results[i]);
                        delete data.results[i].profile;
                    });
                    return data;
                }
            });
        };

        /**
         * Initialize the aboutcontent widget
         */
        var initAboutContent = function() {
            $(document).on('click', '.content-trigger-aboutcontent', function(ev, data) {
                // Receive the context's profile information and set up the delete comment modal
                $(document).on('oae.context.send.aboutcontent', function(ev, contextData) {
                    contentProfile = contextData;
                    // Show the delete comment confirmation modal
                    $('#aboutcontent-modal', $rootel).modal();
                    // Render the content details
                    renderAboutContentDetails();
                    // Render the members
                    getMembers();
                });
                // Request the context profile information
                $(document).trigger('oae.context.get', 'aboutcontent');
            });
        };

        initAboutContent();

    };
});
