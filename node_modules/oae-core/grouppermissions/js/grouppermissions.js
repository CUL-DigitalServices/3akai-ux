/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'jquery.autoSuggest'], function($, oae) {

    return function(uid, showSettings) {

        // The widget container
        var $rootel = $('#' + uid);

        // Caches the group profile
        var groupData = null;

        // Variable that will be used to keep track of the current infinite scroll instance
        var infinityScroll = null;


        /**
         * Resets the widget to its initial state
         */
        var reset = function() {
            // Show the overview container and footer
            $('.modal-body > div', $rootel).hide();
            $('#grouppermissions-overview', $rootel).show();
            $('.modal-footer > div', $rootel).hide();
            $('#grouppermissions-overview-footer', $rootel).show();
        };

        /**
         * [description]
         */
        var getMembers = function() {
            // Disable the previous infinite scroll
            if (infinityScroll) {
                infinityScroll.kill();
            }

            var url = '/api/group/' + groupData.id + '/members';

            // Set up the infinite scroll instance
            infinityScroll = $('.oae-list', $rootel).infiniteScroll(url, {
                'limit': 12
            }, '#grouppermissions-members-template');
        };

        /**
         * Initializes the autosuggest used for sharing with other users or groups.
         * TODO: The Autosuggest initiation needs to be replaced by the API function once merged.
         */
        var setUpAutoSuggest = function() {
            // Initialize the autoSuggest field
            $('#grouppermissions-share-autosuggest', $rootel).autoSuggest('/api/search/general', {
                'selectedItemProp': 'displayName',
                'searchObjProps': 'displayName',
                'selectedValuesProp': 'id',
                'extraParams': {
                    'resourceTypes': ['user', 'group']
                },
                'minChars': 3,
                'neverSubmit': true,
                'showResultListWhenNoMatch': true,
                'retrieveComplete': function(data) {
                    // TODO: Remove this once the API function for the autosuggest
                    // is in place. That will be taking care of potential XSS issues.
                    $.each(data.results, function(index, result) {
                        result.displayName = oae.api.util.security().encodeForHTML(result.displayName);
                    });
                    return data.results;
                }
            });
        };


        /////////////////////
        // VIEW MANAGEMENT //
        /////////////////////

        /**
         * [ description]
         *
         * @returns {[type]} [description]
         */
        var showVisibility = function() {
            // Show the visibility container and footer
            $('.modal-body > div', $rootel).hide();
            $('#grouppermissions-visibility', $rootel).show();
            $('.modal-footer > div', $rootel).hide();
            $('#grouppermissions-visibility-footer', $rootel).show();
        };

        /**
         * Renders the visibility view of the group permissions.
         * Includes an autosuggest to select new members to add to the group.
         */
        var renderVisibility = function() {
            oae.api.util.template().render($('#grouppermissions-visibility-template', $rootel), {
                'groupData': groupData
            }, $('#grouppermissions-visibility', $rootel));

            setUpAutoSuggest();
        };

        /**
         * [ description]
         *
         * @returns {[type]} [description]
         */
        var showShare = function() {
            // Show the share container and footer
            $('.modal-body > div', $rootel).hide();
            $('#grouppermissions-share', $rootel).show();
            $('.modal-footer > div', $rootel).hide();
            $('#grouppermissions-share-footer', $rootel).show();
        };

        /**
         * Renders the share view of the group permissions.
         * Includes an autosuggest to select new members to add to the group.
         */
        var renderShare = function() {
            oae.api.util.template().render($('#grouppermissions-share-template', $rootel), {
                'groupData': groupData
            }, $('#grouppermissions-share', $rootel));

            setUpAutoSuggest();
        };

        /**
         * [ description]
         *
         * @returns {[type]} [description]
         */
        var showOverview = function() {
            // Show the overview container and footer
            $('.modal-body > div', $rootel).hide();
            $('#grouppermissions-overview', $rootel).show();
            $('.modal-footer > div', $rootel).hide();
            $('#grouppermissions-overview-footer', $rootel).show();
        };

        /**
         * Renders the general overview of the group permissions.
         * Includes group visibility and members.
         */
        var renderOverview = function() {
            oae.api.util.template().render($('#grouppermissions-overview-template', $rootel), {
                'groupData': groupData
            }, $('#grouppermissions-overview', $rootel));
        };

        /**
         * Sets up the group permissions modal
         */
        var setUpModal = function() {
            $(document).on('click', '.oae-trigger-grouppermissions', function() {
                $('#grouppermissions-modal', $rootel).modal();

                $(document).on('oae.context.send', function(ev, data) {
                    groupData = data;
                    renderOverview();
                    getMembers();
                });

                $(document).trigger('oae.context.get');
            });

            $('#grouppermissions-modal', $rootel).on('hidden', reset);
        };

        /**
         * [ description]
         *
         * @returns {[type]} [description]
         */
        var addBinding = function() {
            // Render the visibility container when clicking 'change' in the visibility well
            $rootel.on('click', '#grouppermissions-change-visibility', function() {
                renderVisibility();
                showVisibility();
            });

            // Update the overview container when saving the visibility setting
            $rootel.on('click', '#grouppermissions-save-visibility', function() {
                showOverview();
            });

            // Render the share container when clicking 'add more' at the bottom of the list of members
            $rootel.on('click', '#grouppermissions-share-add-more', function() {
                renderShare();
                showShare();
            });

            // Update the overview container when saving the autosuggest values
            $rootel.on('click', '#grouppermissions-share-update', function() {
                showOverview();
            });

            // Catch changes in the visibility radio group
            $rootel.on('change', '.oae-visibility-choice-container input[type="radio"]', function() {
                $('.oae-visibility-choice', $rootel).removeClass('checked');
                $(this).parents('.oae-visibility-choice').addClass('checked');
            });
        };

        setUpModal();
        addBinding();
    };
});
