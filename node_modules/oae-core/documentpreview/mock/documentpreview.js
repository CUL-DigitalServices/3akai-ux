define(function(require) {

  var docpreview = require('widget!documentpreview');
  var cssformat = require('cssformat');
  var jsformat = require('jsformat');

  describe('Document Preview Widget', function(){

    describe('Manifest', function(){
      it('should exist', function(){
        docpreview.manifest.should.be.ok;
      })
      it('should not be empty', function(){
        docpreview.manifest.should.not.be.empty;
      })
      it('should include a URL for the HTML template', function(){
        docpreview.manifest.src.should.be.ok;
      })
    })
    
    describe('HTML Template', function(){
      it('should exist', function(){
        docpreview.html.should.be.ok;
      })
      it('should not be empty', function(){
        docpreview.html.should.not.be.empty;
      })
      it('should include exactly one CSS style sheet', function(){
        docpreview.cssStyleSheets.should.have.length.of(1);
      })
      it('should include exactly one external JavaScript file', function(){
        docpreview.jsScripts.should.have.length.of(1);
      })
    })

    describe('CSS Style Sheet', function(){
      it('should not be empty', function(){
        docpreview.cssStyleSheets[0].content.should.not.be.empty;
      })
      describe('Formatting', function(){
        cssformat(docpreview.cssStyleSheets[0].content);
      })
    })

    describe('JavaScript Module', function(){
      it('should not be empty', function(){
        docpreview.jsScripts[0].content.should.not.be.empty;
      })
      it('should return a function', function() {
        docpreview.jsScripts[0].content.should.be.a('function');
      })
      describe('Formatting', function(){
        jsformat(docpreview.jsFiles[0].content);
      })
    })

    describe('Static Rendering', function() {
      before(function() {
        docpreview.load('widget-container');
      })
      after(function() {
        docpreview.unload();
      })
      it('should insert a preview container on the page', function() {
        $('.documentpreview-container').should.exist;
      })
      it('should include a toolbar', function() {
        $('.documentpreview-container .dp-toolbar').should.exist;
      })
      it('should include a zoom in button', function() {
        $('.documentpreview-container .dp-toolbar button.dp-zoom-in').should.exist;
      })
      it('should include a zoom out button', function() {
        $('.documentpreview-container .dp-toolbar button.dp-zoom-out').should.exist;
      })
      it('should include a full screen button', function() {
        $('.documentpreview-container .dp-toolbar button.dp-full-screen').should.exist;
      })
      it('should include a previous page button', function() {
        $('.documentpreview-container .dp-toolbar button.dp-page-prev').should.exist;
      })
      it('should include a next page button', function() {
        $('.documentpreview-container .dp-toolbar button.dp-page-next').should.exist;
      })
      it('should include a current page input', function() {
        $('.documentpreview-container .dp-toolbar input.dp-page-num').should.exist;
      })
      it('should include a total page input', function() {
        $('.documentpreview-container .dp-toolbar span.dp-page-count').should.exist;
      })
    })

    describe('Basic Toolbar Operation', function() {
      describe('Zoom Levels', function() {
        beforeEach(function() {
          docpreview.load('widget-container');
        })
        afterEach(function() {
          docpreview.unload();
          localStorage.removeItem('documentpreview-0');
        })
        it('should default to an intermediate zoom level', function() {
          $('.documentpreview-container .dp-toolbar button.dp-zoom-in').should.not.have.class('disabled');
          $('.documentpreview-container .dp-toolbar button.dp-zoom-out').should.not.have.class('disabled');
        })
        it('should disable zoom in when limit is reached', function() {
          $('.documentpreview-container .dp-toolbar button.dp-zoom-in')
            .trigger('click').trigger('click').trigger('click').trigger('click')
            .should.have.class('disabled');
        })
        it('should disable zoom out when limit is reached', function() {
          $('.documentpreview-container .dp-toolbar button.dp-zoom-out')
            .trigger('click').trigger('click').trigger('click')
            .should.have.class('disabled');
        })
        it('should set zoom attribute for page content', function() {
          $('.documentpreview-container .dp-toolbar button.dp-zoom-out').trigger('click');
          $('.documentpreview-container .dp-content').should.have.attr('data-zoom', '90');
        })
      })
      describe('Pagination', function() {
        var widgetData = {
          previews: {pageCount: 3}
        };
        beforeEach(function() {
          docpreview.load('widget-container', {}, widgetData);
        })
        afterEach(function() {
          docpreview.unload();
          localStorage.removeItem('documentpreview-0');
        })
        it('should disable previous at the start of the document', function() {
          $('.documentpreview-container .dp-toolbar button.dp-page-prev').should.have.class('disabled');
          $('.documentpreview-container .dp-toolbar button.dp-page-next').should.not.have.class('disabled');
        })
        it('should disable next at the end of the document', function() {
          $('.documentpreview-container .dp-toolbar button.dp-page-next').trigger('click').trigger('click');
          $('.documentpreview-container .dp-toolbar button.dp-page-prev').should.not.have.class('disabled');
          $('.documentpreview-container .dp-toolbar button.dp-page-next').should.have.class('disabled');
        })
        it('should advance forward through the document', function() {
          var $button = $('.documentpreview-container .dp-toolbar button.dp-page-next');
          $('.documentpreview-container .dp-toolbar .dp-page-num').should.have.value('1');
          $button.trigger('click');
          $('.documentpreview-container .dp-toolbar .dp-page-num').should.have.value('2');
          $button.trigger('click');
          $('.documentpreview-container .dp-toolbar .dp-page-num').should.have.value('3');
        })
        it('should skip backward through the document', function() {
          $('.documentpreview-container .dp-toolbar button.dp-page-next').trigger('click').trigger('click');
          var $button = $('.documentpreview-container .dp-toolbar button.dp-page-prev');
          $('.documentpreview-container .dp-toolbar .dp-page-num').should.have.value('3');
          $button.trigger('click');
          $('.documentpreview-container .dp-toolbar .dp-page-num').should.have.value('2');
          $button.trigger('click');
          $('.documentpreview-container .dp-toolbar .dp-page-num').should.have.value('1');
        })
      })
      describe('Preference Preservation', function() {
        var widgetData = {
          previews: {pageCount: 3}
        };
        beforeEach(function() {
          localStorage.setItem('documentpreview-0', '{"zoomlevel": 109, "pagenum": 2}');
          docpreview.load('widget-container', {}, widgetData);
        })
        afterEach(function() {
          docpreview.unload();
          localStorage.removeItem('documentpreview-0');
        })
        it('should default to the preferred page', function() {
          $('.documentpreview-container .dp-toolbar .dp-page-num').should.have.value('2');
        })
        it('should default to the closest zoom level available', function() {
          $('.documentpreview-container .dp-content').should.have.attr('data-zoom', '110');
        })
      })
    })
  
    describe('Document-Specific Style Sheets', function() {
      var widgetData = {
        signature: {signature: 5, expires: 6, lastModified: 7}
      };
      before(function(done) {
        docpreview.clear()
          .user('basic')
          .mock({method: 'GET', url: '/api/content/0/revisions/0/previews/base.css?signature=5&expires=6&lastmodified=7', response: [200, {'Content-Type': 'text/css'}, '/* mockbase.css */']})
          .mock({method: 'GET', url: '/api/content/0/revisions/0/previews/fancy.css?signature=5&expires=6&lastmodified=7', response: [200, {'Content-Type': 'text/css'}, '/* mockfancy.css */']})
          .mock({method: 'GET', url: '/api/content/0/revisions/0/previews/lines.css?signature=5&expires=6&lastmodified=7', response: [200, {'Content-Type': 'text/css'}, '/* mocklines.css */']})
          .restart()
          .load('widget-container', {}, widgetData);
        setTimeout(function() {done();}, 25)
      })
      after(function() {
        docpreview
          .default()
          .unload();
      })
      it('should include the base.css stylesheet', function() {
        $('style').filter(function() {return this.textContent === '/* mockbase.css */';}).length.should.be(1);
      })
      it('should include the fancy.css stylesheet', function() {
        $('style').filter(function() {return this.textContent === '/* mockfancy.css */';}).length.should.be(1);
      })
      it('should include the lines.css stylesheet', function() {
        $('style').filter(function() {return this.textContent === '/* mocklines.css */';}).length.should.be(1);
      })
    })

  })
})