casper.test.comment('Widget - Delete resources');

/**
 * Open the delete resources modal with assertions
 */
var verifyDeleteResourcesModal = function() {
    casper.waitForSelector('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]', function() {
        casper.click('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]');
        casper.test.assertExists('#contentlibrary-widget .oae-list-options button.oae-trigger-deleteresources:not([disabled])', 'The delete resources button is enabled');
        casper.click('#contentlibrary-widget .oae-list-options button.oae-trigger-deleteresources');
        casper.waitUntilVisible('#deleteresources-modal', function() {
            casper.test.assertVisible('#deleteresources-modal', 'Delete resources pane is showing after trigger');
            casper.click('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]');
        });
    });
};

/**
 * Open the delete resources modal without assertions
 */
var openDeleteResourcesModal = function() {
    casper.waitForSelector('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]', function() {
        casper.click('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]');
        casper.click('#contentlibrary-widget .oae-list-options button.oae-trigger-deleteresources');
        casper.waitUntilVisible('#deleteresources-modal', function() {
            casper.click('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]');
        });
    });
};

/**
 * Verify that the delete resources elements are present
 */
var verifyDeleteResourcesElements = function() {
    casper.test.assertExists('#deleteresources-modal .modal-body h4', 'Verify that a warning header is shown');
    casper.test.assertExists('#deleteresources-modal .modal-body ul.oae-list li', 'Verify that a list of resources to delete is shown');
    casper.test.assertExists('#deleteresources-modal .modal-body #deleteresources-manage-delete-library', 'Verify that I can delete resources from library only');
    casper.test.assertExists('#deleteresources-modal .modal-body #deleteresources-manage-delete-system', 'Verify that I can delete resources from the system');
};

/**
 * Verify that deleting resources from the library as the only manager does not succeed.
 */
var verifyDeleteResourcesFromLibraryAsOnlyManager = function() {
    casper.waitForSelector('#deleteresources-modal .modal-body #deleteresources-manage-delete-library', function() {
        casper.click('#deleteresources-modal .modal-body #deleteresources-manage-delete-library');
        // Verify that deleting the item succeeded
        casper.waitForSelector('#oae-notification-container .alert', function() {
            casper.test.assertExists('#oae-notification-container .alert.alert-error', 'Verify that a content item with only one manager cannot be removed from the library');
            casper.click('#oae-notification-container .close');
        });
    });
};

/**
 * Verify that deleting resources from the library with another manager on the content succeeds.
 */
var verifyDeleteResourcesFromLibrary = function() {

};

/**
 * Verify that resources can be deleted from the system
 */
var verifyDeleteResourcesFromSystem = function() {

};

casper.start('http://test.oae.com', function() {
    // Create a user to test changepicture with
    var user = null;
    userUtil().createUsers(1, function(users) {
        user = users[0];
    });

    // Login with that user
    casper.then(function() {
        userUtil().doLogIn(user.username, 'password');
    });

    var filePath = null;
    var linkPath = null;
    var discussionPath = null;
    var collabDocPath = null;

    // Create a file
    casper.then(function() {
        contentUtil().createLink(null, function(_filePath) {
            console.log(_filePath);
            filePath = _filePath;

            casper.thenOpen('http://test.oae.com/me/library', function() {
                // Verify that the delete resources modal opens
                casper.then(function() {
                    casper.echo('Verify open delete resources modal', 'INFO');
                    verifyDeleteResourcesModal();
                });

                // Verify that the delete resources elements are present
                casper.then(function() {
                    casper.echo('Verify delete resources elements', 'INFO');
                    verifyDeleteResourcesElements();
                });

                // Verify that as the only manager I cannot remove content form my library
                casper.then(function() {
                    casper.echo('Verify deleting resources from the library fails for content with only me as a manager', 'INFO');
                    verifyDeleteResourcesFromLibraryAsOnlyManager();
                });

                // Verify that content with another manager can be deleted from my library
                casper.then(function() {
                    casper.echo('Verify deleting resources from the library succeeds for content with another manager', 'INFO');
                    openDeleteResourcesModal();
                    verifyDeleteResourcesFromLibrary();
                });

                // Verify deleting content from the system
                casper.then(function() {
                    casper.echo('Verify deleting resources from the system', 'INFO');
                    verifyDeleteResourcesFromSystem();
                });
            });

            // Create a link
            //casper.then(function() {
            //    contentUtil().createLink(null, function(_linkPath) {
            //        linkPath = _linkPath;
                //});
            //});
        });
    });

    // Log out at the end of the test
    casper.then(function() {
        userUtil().doLogOut();
    });
});

casper.run(function() {
    this.test.done();
});
